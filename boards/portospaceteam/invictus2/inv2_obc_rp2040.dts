/*
 * Copyright (c) 2021 Yonatan Schachter
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;

#include <freq.h>
#include <raspberrypi/rpi_pico/rp2040.dtsi>
#include <zephyr/dt-bindings/pwm/pwm.h>
#include <zephyr/dt-bindings/i2c/i2c.h>
#include <zephyr/dt-bindings/pinctrl/rpi-pico-rp2040-pinctrl.h>

#include "common/inv2_pinctrl_common.dtsi"
#include "common/inv2_common.dtsi"
#include "common/inv2_sdcard.dtsi"

/ {
    aliases {
        led0 = &led_green_0;
    };

    // special node to handle simple bindings
    zephyr,user {
        pwms = <&pwm 25 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";

        led_green_0: led0 {
            label = "Green LED 0";
            gpios = <&gpio0 27 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
        };

        led_red_0: led2 {
            label = "Red LED 0";
            gpios = <&gpio0 28 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
        };
    };

    nrf_radio_fem: nrf21540 {
          compatible = "nordic,nrf21540-fem";
          spi-if = <&nrf_fem_spi>;
          rx-en-gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
          tx-en-gpios = <&gpio0 20 GPIO_ACTIVE_HIGH>;
          pdn-gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;
          mode-gpios = <&gpio0 14 GPIO_ACTIVE_LOW>;
          /* ant-sel is grounded. Remaining props left as default */
    };
};

&spi1 {
	clock-frequency = <DT_FREQ_M(5)>;
	status = "okay";
	pinctrl-0 = <&spi1_obc>;
	pinctrl-names = "default";

    cs-gpios = <&gpio0 9 GPIO_ACTIVE_LOW>, // NRF21540 CS
               <&gpio0 13 GPIO_ACTIVE_LOW>; // SX1280 CS

    nrf_fem_spi: nrf21540-spi@0{
        compatible = "nordic,nrf21540-fem-spi";
        reg = <0>;
        spi-max-frequency = <DT_FREQ_M(5)>;
    };

    smt_radio: sx1280@1 {
          compatible = "semtech,lora-sx1280";
          reg = <1>;
          spi-max-frequency = <DT_FREQ_M(18)>;

          busy-gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;
          reset-gpios = <&gpio0 10 GPIO_ACTIVE_HIGH>; // TODO check if still needed
    };
};

&uart0 {
    status = "okay";
    current-speed = <115200>;
    pinctrl-0 = <&uart0_hw_flow_ctrl>;
    pinctrl-names = "default";
    hw-flow-control;
};

// RS483 Modbus RTU master
&uart1 {
	current-speed = <115200>;
	status = "okay";
	pinctrl-0 = <&uart_rs485>;
	pinctrl-names = "default";

    modbus0{
        compatible = "zephyr,modbus-serial";
        status = "okay";
        de-gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>;
    };
};

&pinctrl{
    uart0_hw_flow_ctrl: uart0_hw_flow_ctrl {
        group1 {
            pinmux = <UART0_TX_P0>, <UART0_RTS_P3>;
        };
        group2 {
            pinmux = <UART0_RX_P1>, <UART0_CTS_P2>;
            input-enable;
        };
    };

	uart_rs485: uart_rs485 {
		group1 {
			pinmux = <UART1_TX_P24>;
		};
		group2 {
			pinmux = <UART1_RX_P25>;
			input-enable;
		};
	};

	spi1_obc: spi1_obc {
		group1 {
			pinmux = <SPI1_CSN_P9>, <SPI1_CSN_P13>, <SPI1_SCK_P10>, <SPI1_TX_P11>;
		};
		group2 {
			pinmux = <SPI1_RX_P8>;
			input-enable;
		};
	};
};
